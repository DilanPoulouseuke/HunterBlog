---
import TableOfContentsHeading from '@/components/TabletOfContentsHeading'

const { headings } = Astro.props

type TableOfContent = {
	depth: number
	text: string
	slug: string
	subheadings: TableOfContent[]
}

// Add defensive programming to handle undefined headings
const toc = buildToc(headings || [])

function buildToc(headings: TableOfContent[]) {
	let toc: TableOfContent[] = []
	let parentHeadings = new Map()
	headings.forEach((h) => {
		let heading = { ...h, subheadings: [] }
		parentHeadings.set(heading.depth, heading)
		if (heading.depth === 1 || heading.depth === 2) {
			toc.push(heading)
		} else {
			const parent = parentHeadings.get(heading.depth - 1)
			if (parent) {
				parent.subheadings.push(heading)
			} else {
				// Handle case where parent heading is not found
				console.error(`Parent heading not found for ${heading.text}`)
			}
		}
	})
	return toc
}
---

<nav class='max-w-xs dark:text-black'>
	<h3 class='font-bold mb-3 text-lg dark:text-white'>Index</h3>
	<ul class='text-sm text-wrap-balance flex flex-col gap-1'>
		{toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
	</ul>
</nav>
